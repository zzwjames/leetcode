class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        m=len(matrix)
        n=len(matrix[0])
        self.presum=[[0 for col in range(n)] for row in range(m)]
        for i in range(m):
            for j in range(n):
                a=0
                b=0
                c=0
                if(i-1>=0):
                    a=self.presum[i-1][j]
                if(j-1>=0):
                    b=self.presum[i][j-1]
                if(i-1>=0 and j-1>=0):
                    c=self.presum[i-1][j-1]
                self.presum[i][j]=a+b+matrix[i][j]-c
        #print(self.presum)
        

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        # print(self.presum[row1][col1])
        # print(self.presum[row2][col2])
        a=0
        b=0
        c=0
        if(col1-1>=0):
            a=self.presum[row2][col1-1]
        if(row1-1>=0):
            b=self.presum[row1-1][col2]
        if(col1-1>=0 and row1-1>=0):
            c=self.presum[row1-1][col1-1]
        return (self.presum[row2][col2]-a-b+c)
