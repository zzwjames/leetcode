
class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        def quickSort(nums,left, right):
            # if left>=right return nums[left]
            i,j,pivot=left,right,nums[left]
            while i<j:
                while i<j:
                    if(nums[j]>=pivot):j-=1
                    else:
                        nums[i]=nums[j]
                        i+=1
                        break
                while i<j:
                    if(nums[i]<pivot):i+=1
                    else:
                        nums[j]=nums[i]
                        j-=1
                        break
            nums[i]=pivot
            # quicksort and just sort one side to reduce o(n)
            if i==loc: return nums[i]
            elif i<loc: return quickSort(nums,i+1,right)
            else: return quickSort(nums,left,i-1)
        n=len(nums)
        loc=n-k
        return quickSort(nums,0,n-1)
       
